#!/usr/bin/env bash
#
# Run the integration tests with elasticsearch
#
# Note: requires docker to be installed and usable without sudo (ie: sudo usermod -aG docker $USER)
#
RUN=$(uuidgen)
ES_VERSION="2.4.1"

#
# Helper
#
function clean() {
    docker rm -f "master-${RUN}" "node1-${RUN}" "node2-${RUN}"
}
trap clean EXIT

docker_config=('--detach')

es_config=(
    "-Dindex.analysis.analyzer.default.tokenizer=keyword"
    "-Dmarvel.agent.enabled=false"
    "-Dindex.number_of_shards=1"
    "-Dindex.number_of_replicas=2"
)

docker run --name="master-${RUN}" "${docker_config[@]}" "elasticsearch:${ES_VERSION}" "${es_config[@]}"
MASTER=$(docker inspect --format='{{ .NetworkSettings.IPAddress }}' "master-${RUN}")

docker run --name="node1-${RUN}" "${docker_config[@]}" "elasticsearch:${ES_VERSION}" "${es_config[@]}" \
    "-Ddiscovery.zen.ping.unicast.hosts=${MASTER}"
docker run --name="node2-${RUN}" "${docker_config[@]}" "elasticsearch:${ES_VERSION}" "${es_config[@]}" \
    "-Ddiscovery.zen.ping.unicast.hosts=${MASTER}"

sleep "15s"
echo "Master: ${MASTER}"
curl --silent "${MASTER}:9200/_cat/nodes"

export MASTER INTEGRATION="true"

echo "Start test: $(date)"
time go test -v -bench=. -benchmem -timeout=5h
exitcode=$?

sleep "30s"

curl --silent "http://${MASTER}:9200/_cat/shards?pretty"

if test $exitcode != 0 ; then
    echo "Tests finished with errors"
    exit $exitcode
fi
